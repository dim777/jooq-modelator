plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.22'
    id("maven-publish")
}

apply plugin: 'java-gradle-plugin'
apply from: "$rootDir/gradle/versioning.gradle"

group 'net.i-neb.gradle.plugin'

repositories {
    jcenter()
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation gradleApi()

    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
    implementation('net.jodah:failsafe:2.4.0')
    implementation('com.github.docker-java:docker-java-core:3.2.13')
    implementation('com.github.docker-java:docker-java-transport-httpclient5:3.2.13')
    implementation('org.flywaydb:flyway-core:6.5.1')
    implementation('org.liquibase:liquibase-core:3.10.1') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    implementation('org.slf4j:slf4j-api:1.7.30')

    implementation('javax.xml.bind:jaxb-api:2.3.1')
    implementation('com.sun.xml.bind:jaxb-core:2.3.0.1')
    implementation('javax.activation:activation:1.1.1')
    implementation('com.sun.xml.bind:jaxb-impl:2.3.3')

    runtimeOnly('org.yaml:snakeyaml:1.26')

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.6.2')
}

gradlePlugin {
    plugins {
        jooqModelatorPlugin {
            id = 'jooq-modelator-plugin'
            implementationClass = 'ch.ayedo.jooqmodelator.gradle.JooqModelatorPlugin'
            displayName = "Jooq-Modelator"
        }
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/OWNER/REPOSITORY")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}


